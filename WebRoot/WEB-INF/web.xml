<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">

    <display-name>webStudy</display-name>
    <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:applicationContext*.xml</param-value>
  </context-param>
  <!--统一验证平台配置问题  -->
        <filter>
  <filter-name>CAS Filter</filter-name>
  <filter-class>edu.yale.its.tp.cas.client.filter.CASFilter</filter-class>
  <init-param>
    <param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
    <param-value>https://portal.hnust.edu.cn:8443/cas/login</param-value>
  </init-param>
  <init-param>
    <param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
    <param-value>https://portal.hnust.edu.cn:8443/cas/serviceValidate</param-value>
  </init-param>
  <init-param>
    <param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
    <param-value>localhost:8088</param-value>
  </init-param>
</filter>
  <filter-mapping>
<filter-name>CAS Filter</filter-name>
  <url-pattern>/loginClient</url-pattern>
</filter-mapping>

<!-- log4j 配置  开始 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>600000</param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webStudy.root</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- log4j 配置  结束 -->
       <!-- Spring的OpenSessionInView实现 -->
<filter>
    <filter-name>openSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
<!-- singleSession默认为true,若设为false则等于没用OpenSessionInView 。所以默认可以不写-->
     <init-param>
       <param-name>singleSession</param-name>
       <param-value>true</param-value>
     </init-param>
<!--   
指定org.springframework.orm.hibernate3.LocalSessionFactoryBean在spring配置文件中的名称,默认值为sessionFactory。 如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,该参
数一定要指定,否则会出现找不到sessionFactory的例外。所以默认可以不写  
-->
 <init-param>
     <param-name>sessionFactoryBeanName</param-name>
   <param-value>sessionFactory</param-value>
  </init-param>
</filter>
<filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>

    <!-- 处理中文乱码问题 start -->
    <filter>
        <filter-name>UTF-Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>

        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>

    </filter>
    <!-- struts2过滤器 -->
    <filter>
        <filter-name>struts2</filter-name>
        <!-- <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class> -->
        <filter-class>com.baidu.ueditor.EditorStrutsFilter</filter-class><!--  自定义过滤器过滤ueditor图片上传请求-->
    </filter>

    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
   <!-- dwr 过滤器 -->

    <servlet>
    <display-name>DWR Sevlet</display-name>
    <servlet-name>dwr-invoker</servlet-name>
    <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
    <init-param>
        <description>是否打开调试功能</description>
        <param-name>debug</param-name>
        <param-value>true</param-value>
    </init-param>
    <init-param>
        <description>日志级别有效值为： FATAL, ERROR, WARN (the default), INFO and DEBUG.</description>
        <param-name>logLevel</param-name>
        <param-value>DEBUG</param-value>
    </init-param>
    <init-param>
        <description>是否激活反向Ajax</description>
        <param-name>activeReverseAjaxEnabled</param-name>
        <param-value>true</param-value>
    </init-param>
    <init-param>
         <description>在WEB启动时是否创建范围为application的creator</description>
         <param-name>initApplicationScopeCreatorsAtStartup</param-name>
         <param-value>true</param-value>
    </init-param>
    <init-param>
        <description>在WEB启动时是否创建范围为application的creator</description>
        <param-name>preferDataUrlSchema</param-name>
        <param-value>false</param-value>
    </init-param>
    <init-param>
            <param-name>allowScriptTagRemoting</param-name >
            <param-value>true </param-value>
</init-param>
        <load-on-startup>1</load-on-startup>

</servlet>
<servlet-mapping>
    <servlet-name>dwr-invoker</servlet-name>
    <url-pattern>/dwr/*</url-pattern>
</servlet-mapping>


    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

     <session-config>
                <session-timeout>240</session-timeout>
    </session-config>


</web-app>
    